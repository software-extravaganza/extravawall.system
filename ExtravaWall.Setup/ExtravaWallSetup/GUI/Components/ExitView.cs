
//------------------------------------------------------------------------------

//  <auto-generated>
//      This code was generated by:
//        TerminalGuiDesigner v1.0.22.0
//      You can make changes to this file and they will not be overwritten when saving.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace ExtravaWallSetup.GUI.Components {
    using NStack;
    using Terminal.Gui;


    public partial class ExitView {

        public void SetHeight(int height) {
            Height = height;
            contentLabel.Height = Height - 6;
        }
        public ExitView(bool isSuccess, ustring title, ustring content) {
            InitializeComponent();
            this.contentLabel.WordWrap = true;
            this.contentLabel.Enabled = true;
            exitButton.Clicked += ExitButton_Clicked;
            copyButton.Clicked += CopyButtonOnClicked;
            exitButton.Enter += ButtonOnEnter;
            copyButton.Enter += ButtonOnEnter;
            contentLabel.Enter += ButtonOnEnter;

            if (!Clipboard.IsSupported) {
                copyButton.Text = "Select text";
            }

            if (isSuccess) {
                this.ColorScheme = blackOnGreenCustom;
                this.titleLabel.ColorScheme = greenOnBlackCustom;
                this.exitButton.ColorScheme = greenOnBlackButtonCustom;
                this.copyButton.ColorScheme = greenOnBlackButtonCustom;
            }

            this.titleLabel.Text = title;
            contentLabel.Text = content;
            exitButton.SetFocus();
        }

        private void ButtonOnEnter(FocusEventArgs obj) {
            exitButton.SetNeedsDisplay();
            copyButton.SetNeedsDisplay();
            contentLabel.SetNeedsDisplay();
        }

        private void CopyButtonOnClicked() {
            var clipboardData = contentLabel?.Text?.ToString();
            if (string.IsNullOrWhiteSpace(clipboardData)) {
                return;
            }

            if (Clipboard.IsSupported && !Clipboard.TrySetClipboardData(clipboardData)) {
                var errorWriter = InstallManager.Instance.Console.GetNewWriter(Color.Red, Color.Black);
                errorWriter.WriteLine("Could not copy to clipboard");
            } else if (!Clipboard.IsSupported) {
                contentLabel.SelectAll();
            }
        }

        private void ExitButton_Clicked() {
            InstallManager.Instance?.Exit(contentLabel?.Text?.ToString());
        }
    }
}
